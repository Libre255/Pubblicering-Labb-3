name: DeployBV

on:
  push:
    branches:
      - main
env:
  frontendImageName: libre255/todofrontend
  apiImageName: libre255/todoapi

jobs:
  buildpush-API:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./todo_api_publabb2/todo_api_publabb2
    steps:
      - uses: actions/checkout@v4

      - name: Create env file for .NET API
        run: touch .env

      - name: Add variables for .NET API
        run: |
          echo ENDPOINT=${{secrets.COMOS_ENDPOINT}} >> .env
          echo KEY=${{secrets.COSMOSKEY}} >> .env
          echo DATABASE=${{secrets.DATABASE}} >> .env
          echo CONTAINER=${{secrets.CONTAINER}} >> .env

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.D_USER_NAME}}
          password: ${{ secrets.D_PASSWORD}}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./todo_api_publabb2/todo_api_publabb2/Dockerfile
          push: true
          tags: docker.io/$apiImageName:${{ github.sha }}

  buildpush-FRONTEND:
    runs-on: ubuntu-latest
    needs: buildpush-API
    defaults:
      run:
        working-directory: ./todolistfrontend
    steps:
      - uses: actions/checkout@v4
      
      - name: Create env file for FrontEnd
        run: touch .env

      - name: Add variable for FrontEnd
        run: echo REACT_APP_ENDPOINT=${{secrets.API_ENDPOINT}} >> .env
      
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.D_USER_NAME}}
          password: ${{ secrets.D_PASSWORD}}

      - name: docker build Frontend
        run: docker build -t $frontendImageName:${{ github.sha}} .
      
      - name: docker push Frontend
        run: docker push $frontendImageName:${{ github.sha}}

  deployApps:
    runs-on: ubuntu-latest
    needs: buildpush-FRONTEND
    steps:
    - uses: actions/checkout@v4

    - uses: docker/login-action@v3
      with:
        username: ${{ secrets.D_USER_NAME}}
        password: ${{ secrets.D_PASSWORD}}

    - uses: azure/webapps-deploy@v2
      with:
        app-name: 'testappserivive'
        publish-profile: ${{ secrets.AZURE_WEBB_PUBLISH_PROFILE }}
        images: docker.io/$frontendImageName:${{ github.sha}}
    
    # - uses: azure/webapps-deploy@v2
    #   with:
    #     app-name: 'todo-backend-bv'
    #     publish-profile: ${{ secrets.backend_pf }}
    #     images: docker.io/$apiImageName:${{ github.sha }}
    
          